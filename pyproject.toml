[project]
name = "apex"
version = "3.0.0"
description = "Bittensor Subnet 1: Apex"
readme = "README.md"
requires-python = "~=3.11"
dependencies = [
    "nltk>=3.9.1",
    "aiosqlite>=0.21.0",
    "pydantic>=2.11.7",
    "cachetools>=5.0.0",
    "pyyaml>=6.0.0",
    "requests>=2.31.0",
    "macrocosmos>=0.1.0",
    "numpy>=2.0.0",
    "aiohttp>=3.8.3",
    "beautifulsoup4>=4.13.3",
    "langchain>=0.3.26",
    "langchain-community>=0.0.59",
    "faiss-cpu>=1.8.0",
    "langchain-openai>=0.3.28",
    "langchain-sandbox>=0.0.6",
    "dotenv>=0.9.9",
    "rich>=14.0.0",
    "loguru>=0.7.3",
    "tavily-python>=0.7.10",
    "pip>=25.1.1",
    "bittensor>=9.7.0",
    "rouge>=1.0.1",
    "substrate-interface>=1.7.11",
]


[project.optional-dependencies]
dev = [
    "mypy==1.17.0",
    "ruff==0.12.5",
    "types-pyyaml>=6.0.12.20250516",
    "types-cachetools>=6.0.0.20250525",
    "langchain>=0.3.26",
    "dotenv>=0.9.9",
    "langchain-openai>=0.3.28",
    "langchain-core>=0.3.68",
    "langchain-sandbox>=0.0.6",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "pytest-cov>=5.0.0",
    "pre-commit==4.2.0",
]

[tool.setuptools]
packages = ["apex"]

[tool.mypy]
plugins = "pydantic.mypy"
strict = true

# Additional strict options.
warn_unused_configs = true
disallow_any_generics = true
disallow_subclassing_any = true
disallow_untyped_calls = true
disallow_untyped_defs = false
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = false
warn_return_any = true
no_implicit_reexport = true
strict_equality = true

# Show error codes for easier suppression when needed
show_error_codes = true

# Exclude common directories that don't need type checking
exclude = [
    "^build/",
    "^dist/",
    "^docs/",
    "^tests/",
    "^venv/",
    '^\.venv/',
    # TODO: Enable once fixed.
    "scripts/",
    "apex/services/",
    "apex/validator/",
]

[[tool.mypy.overrides]]
module = [
    "celery.*",
    "bittensor.*",
    "macrocosmos.*",
    "nltk.*",
    "tavily.*",
    "rouge.*",
    "requests.*",
    "substrateinterface.*"
]
ignore_missing_imports = true

[tool.ruff]
line-length = 120
indent-width = 4
target-version = "py311"

# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
]
[tool.ruff.lint]
# Enable pycodestyle (`E`) and Pyflakes (`F`) codes by default.
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "N",  # pep8-naming
    "D",  # pydocstyle
]
ignore = [
    "D100",
    "D101",
    "D102",
    "D103",
    "D104",
    "D105",
    "D106",
    "D107",
]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.lint.pydocstyle]
convention = "google"

[tool.ruff.lint.isort]
# Sort by module, then by case-sensitive name.
# See https://docs.astral.sh/ruff/settings/#lint-isort-order-by-type
order-by-type = true


[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"
# Like Black, indent with spaces, rather than tabs.
indent-style = "space"
# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false
# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

[tool.uv.sources]
apex-deep-research = { git = "https://github.com/macrocosm-os/apex_deep_research.git" }

[tool.uv]
override-dependencies = [
    # Override artificial pins from bittensor ecosystem for production
    "starlette>=0.37.2",
    "aiohttp>=3.8.3",
    "protobuf>=3.20.2",
    "cachetools>=2.0.0",
]

[dependency-groups]
dev = [
    "loguru>=0.7.3",
    "mypy==1.17.0",
    "pre-commit==4.2.0",
    "pydantic>=2.11.7",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
    "types-pyyaml>=6.0.12.20250516",
]
