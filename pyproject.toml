[tool.poetry]
name = "prompting"
version = "2.19.3"
description = "Subnetwork 1 runs on Bittensor and is maintained by Macrocosmos. It's an effort to create decentralised AI"
authors = ["Kalei Brady, Dmytro Bobrenko, Felix Quinque, Steffen Cruz, Richard Wardle"]
readme = "README.md"

[tool.poetry.group.dev.dependencies]
ipykernel = "^6.29.5"

[tool.black]
line-length = 120
target-version = ['py310']
include = '\.pyi?$'
exclude = '''
/(
    \.git
| \.hg
| \.mypy_cache
| \.tox
| \.venv
| AutoAWQ
| _build
| buck-out
| build
)/
'''

[tool.flake8]
max-line-length = 120
extend-ignore = "D203,E203,E251,E266,E302,E305,E401,E402,E501,F401,F403,W503"
exclude = ".git,__pycache__,dist,.venv,venv,*/lib/python*/site-packages,*/lib64/python*/site-packages"
# TODO: Decrease to at least 10 (prompting/weight_setting/weight_setter.py).
max-complexity = 14

[tool.isort]
atomic = true
profile = "black"
line_length = 120
skip_gitignore = true

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    "AutoAWQ",
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    ".venv",
    "venv",
]

# Same as Black.
line-length = 120
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["C9", "E4", "E7", "E9", "F"]
# Ignore "Module top level import" due to the settings initialization.
ignore = ["E402"]

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

[tool.ruff.lint.mccabe]
# TODO: Decrease to at least 10 (prompting/weight_setting/weight_setter.py).
max-complexity = 14

[tool.poetry.dependencies]
bittensor = "9.0.0"
requests = "^2.32.3"
python = ">=3.10 <3.11"
openai = "^1.35.13"
starlette = "^0.37.2"
python-dotenv = "^1.0.1"
pre-commit = "^3.7.1"
ruff = "^0.5.2"
flake8 = "^7.1.0"
black = "23.7.0"
pytest = "^8.3.1"
loguru = "^0.7.2"
pydantic = "^2.8.2"
pydantic-settings = "^2.5.2"
tenacity = "^9.0.0"
isort = "^5.13.2"
tiktoken = "^0.8.0"
pillow = "^11.0.0"
torch = { version = "^2.5.1", optional = true }
transformers = { version = "^4.49.0", optional = true }
torchvision = { version = ">=0.20.1", optional = true }
accelerate = { version = ">=1.1.1", optional = true }
angle-emb = { version = "0.4.3", optional = true }
numpy = { version = ">=2.0.1", optional = true }
rouge = { version = ">=1.0.1", optional = true }
bs4 = { version = ">=0.0.2", optional = true }
wikipedia = { version = ">=1.4.0", optional = true }
duckduckgo-search = "^7.2.1"
huggingface-hub = { version = ">=0.25.2", optional = true }
pandas = { version = ">=2.2.1", optional = true }
trafilatura = { version = ">=1.12.1", optional = true }
datasets = { version = ">=3.1.0", optional = true }
nltk = { version = ">=3.8.1", optional = true }
thefuzz = { version = ">=0.22.1", optional = true }
wandb = { version = ">=0.19.4", optional = true }
python-whois = { version = ">=0.9.5", optional = true }
substrate-interface = "^1.7.11"
tldextract = "^5.1.3"
justext = "3.0.2"

[tool.poetry.extras]
validator = [
    "thefuzz",
    "torch",
    "transformers",
    "torchvision",
    "accelerate",
    "autoawq",
    "angle-emb",
    "numpy",
    "rouge",
    "bs4",
    "wikipedia",
    "duckduckgo-search",
    "huggingface-hub",
    "pandas",
    "trafilatura",
    "datasets",
    "nltk",
    "wandb",
    "python-whois",
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
